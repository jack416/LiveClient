//
//  Session.cpp
//  Common-C-Library
//  Camshare会话实例
//  Created by Max on 2017/2/24.
//  Copyright © 2017年 qpidnetwork. All rights reserved.
//

#include "Session.h"
#include <common/CommonFunc.h>

using namespace session;

Session::Session() {
    m_lock = IAutoLock::CreateAutoLock();
    m_lock->Init(IAutoLock::IAutoLockType_Recursive);
    
    Reset();
}

Session::~Session() {
    IAutoLock::ReleaseAutoLock(m_lock);
}

void Session::Reset() {
    m_sessionType = SessionType_Camshare;
    m_sessionInviteType = SessionInviteType_Invite;
    m_sessionStatus = SessionStatus_Unknow;
    m_camSessionId = INVALID_SESSIONID;
    
    m_userItem = NULL;
    m_param = 0;
    m_ladyCamParam = 0;
    m_errType = LCC_ERR_SUCCESS;
    
    m_inviteTime = 0;
    m_recvVideoTime = 0;
    m_background = false;
    m_backgroundTime = 0;
    
    mCamShareInviteStatus = SessionCamshareStatus_SendInvite;
}

LCUserItem* Session::GetUserItem() {
    return m_userItem;
}

void Session::SetLCUserItem(LCUserItem* userItem) {
    m_userItem = userItem;
}

int Session::GetCamSessionId() {
    return m_camSessionId;
}

void Session::SetCamSessionId(int camSessionId) {
    m_camSessionId = camSessionId;
}

SessionType Session::GetSessionType() {
    return m_sessionType;
}

void Session::SetSessionType(SessionType sessionType) {
    m_sessionType = sessionType;
}

SessionInviteType Session::GetInviteType() {
    return m_sessionInviteType;
}

void Session::SetInviteType(SessionInviteType sessionInviteType) {
    m_sessionInviteType = sessionInviteType;
}

SessionStatus Session::GetSessionStatus() {
    return m_sessionStatus;
}

void Session::SetSessionStatus(SessionStatus sessionStatus) {
    m_sessionStatus = sessionStatus;
}

void Session::Lock() {
    m_lock->Lock();
}

void Session::Unlock() {
    m_lock->Unlock();
}

unsigned long long Session::GetParam() {
    return m_param;
}

void Session::SetParam(unsigned long long param) {
    m_param = param;
}

unsigned long long Session::GetLadyCamParam() {
    return m_ladyCamParam;
}

void Session::SetLadyCamParam(unsigned long long param) {
    m_ladyCamParam = param;
}


LCC_ERR_TYPE Session::GetErrorType() {
    return m_errType;
}

void Session::SetErrorType(LCC_ERR_TYPE type) {
    m_errType = type;
}

long long Session::GetInviteTime() {
    return m_inviteTime;
}

void Session::SetInviteTime(long long inviteTime) {
    m_inviteTime = inviteTime;
}

long long Session::GetRecvVideoTime() {
    return m_recvVideoTime;
}

void Session::UpdateRecvVideoTime() {
    m_recvVideoTime = getCurrentTime();
}

bool Session::GetBackground() {
    return m_background;
}

void Session::SetBackground(bool background) {
    if( m_background != background ) {
        m_background = background;
        
        if ( m_background ) {
            // 开始计时
            m_backgroundTime = getCurrentTime();
        }
    }
}

long long Session::GetBackgroundTime() {
    return m_backgroundTime;
}

SessionCamshareStatus Session::GetSessionCamshareInviteStatus() {
    return mCamShareInviteStatus;
}

void Session::SetSessionCamshareInviteStatus(SessionCamshareStatus sessionStatus) {
    mCamShareInviteStatus = sessionStatus;
}
